[{"/home/adgk/projects/colourbrain/src/index.js":"1","/home/adgk/projects/colourbrain/src/reportWebVitals.js":"2","/home/adgk/projects/colourbrain/src/App.js":"3","/home/adgk/projects/colourbrain/src/components/Game/Game.jsx":"4","/home/adgk/projects/colourbrain/src/components/FAQ/FAQ.jsx":"5","/home/adgk/projects/colourbrain/src/components/About/About.jsx":"6","/home/adgk/projects/colourbrain/src/components/Nav/Nav.jsx":"7","/home/adgk/projects/colourbrain/src/tools/colorTools.js":"8","/home/adgk/projects/colourbrain/src/components/RoundColor/RoundColor.jsx":"9","/home/adgk/projects/colourbrain/src/components/Button/Button.jsx":"10","/home/adgk/projects/colourbrain/src/components/ColorPicker/ColorPicker.jsx":"11","/home/adgk/projects/colourbrain/src/components/CompareColors/CompareColors.jsx":"12","/home/adgk/projects/colourbrain/src/components/Results/Results.jsx":"13","/home/adgk/projects/colourbrain/src/components/Highscores/Highscores.jsx":"14","/home/adgk/projects/colourbrain/src/components/NewGameButtons/NewGameButtons.jsx":"15","/home/adgk/projects/colourbrain/src/tools/deltaE.js":"16","/home/adgk/projects/colourbrain/src/tools/scoring.js":"17","/home/adgk/projects/colourbrain/src/tools/gameModeMaps.js":"18","/home/adgk/projects/colourbrain/src/components/Checkbox/Checkbox.js":"19","/home/adgk/projects/colourbrain/src/components/AnimatedCounter/AnimatedCounter.jsx":"20","/home/adgk/projects/colourbrain/src/components/Home/Home.jsx":"21","/home/adgk/projects/colourbrain/src/components/Hooks/useOutsideClick.jsx":"22","/home/adgk/projects/colourbrain/src/components/SVGButton/SVGButton.jsx":"23","/home/adgk/projects/colourbrain/src/components/GridPicker/GridPicker.js":"24"},{"size":525,"mtime":1611250416336,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1610900279497,"results":"27","hashOfConfig":"26"},{"size":2773,"mtime":1611270901923,"results":"28","hashOfConfig":"26"},{"size":10847,"mtime":1611318238506,"results":"29","hashOfConfig":"26"},{"size":135,"mtime":1611157591230,"results":"30","hashOfConfig":"26"},{"size":140,"mtime":1611157591226,"results":"31","hashOfConfig":"26"},{"size":1063,"mtime":1611271757306,"results":"32","hashOfConfig":"26"},{"size":4073,"mtime":1611319171724,"results":"33","hashOfConfig":"26"},{"size":258,"mtime":1610993652521,"results":"34","hashOfConfig":"26"},{"size":370,"mtime":1611260690675,"results":"35","hashOfConfig":"26"},{"size":3373,"mtime":1611318935110,"results":"36","hashOfConfig":"26"},{"size":1462,"mtime":1611319299876,"results":"37","hashOfConfig":"26"},{"size":4908,"mtime":1611319306479,"results":"38","hashOfConfig":"26"},{"size":694,"mtime":1611240981582,"results":"39","hashOfConfig":"26"},{"size":9040,"mtime":1611312893316,"results":"40","hashOfConfig":"26"},{"size":1531,"mtime":1610913524693,"results":"41","hashOfConfig":"26"},{"size":542,"mtime":1611319365251,"results":"42","hashOfConfig":"26"},{"size":762,"mtime":1611095190217,"results":"43","hashOfConfig":"26"},{"size":285,"mtime":1611011721284,"results":"44","hashOfConfig":"26"},{"size":655,"mtime":1611096594953,"results":"45","hashOfConfig":"26"},{"size":177,"mtime":1611157591236,"results":"46","hashOfConfig":"26"},{"size":400,"mtime":1611159140112,"results":"47","hashOfConfig":"26"},{"size":1339,"mtime":1611270507514,"results":"48","hashOfConfig":"26"},{"size":804,"mtime":1611317405392,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1kjysou",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},"/home/adgk/projects/colourbrain/src/index.js",[],["102","103"],"/home/adgk/projects/colourbrain/src/reportWebVitals.js",[],"/home/adgk/projects/colourbrain/src/App.js",["104"],"import './App.scss';\nimport { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nimport Home from './components/Home/Home';\nimport Game from './components/Game/Game';\nimport FAQ from './components/FAQ/FAQ';\nimport About from './components/About/About';\n\nimport Nav from './components/Nav/Nav';\n\nimport useOutsideClick from './components/Hooks/useOutsideClick.jsx';\n\nfunction App() {\n  const [navActive, setNavActive] = useState(false);\n\n  const navRef = useRef();\n\n  useOutsideClick(navRef, () => {\n    if (navActive) {\n      setNavActive(false);\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <header className={navActive ? 'header header-nav-active' : ' header '}>\n          <Link to=\"/\">\n            <h1>Colour Brain</h1>\n          </Link>\n\n          <div ref={navRef}>\n            <Nav navActive={navActive} setNavActive={setNavActive} />\n          </div>\n        </header>\n        {/* A <Switch> looks through its children <Route>s and\n          renders the first one that matches the current URL. */}\n        <main>\n          <AnimatePresence exitBeforeEnter>\n            <Switch key={'switch'}>\n              <Route key=\"faq\" path=\"/FAQ\">\n                <motion.div\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                  transition={{ duration: 0.7 }}\n                >\n                  <FAQ />\n                </motion.div>\n              </Route>\n              <Route key=\"about\" path=\"/about\">\n                <motion.div\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                  transition={{ duration: 0.7 }}\n                >\n                  <About />\n                </motion.div>\n              </Route>\n              <Route key=\"game\" path=\"/play\">\n                <motion.div\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                  transition={{ duration: 0.7 }}\n                >\n                  <Game />\n                </motion.div>\n              </Route>\n\n              <Route key=\"home\" path=\"/\" exact>\n                <motion.div\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                  transition={{ duration: 0.7 }}\n                >\n                  <Home />\n                </motion.div>\n              </Route>\n            </Switch>\n          </AnimatePresence>\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/adgk/projects/colourbrain/src/components/Game/Game.jsx",["105","106","107","108"],"/home/adgk/projects/colourbrain/src/components/FAQ/FAQ.jsx",[],"/home/adgk/projects/colourbrain/src/components/About/About.jsx",[],"/home/adgk/projects/colourbrain/src/components/Nav/Nav.jsx",[],"/home/adgk/projects/colourbrain/src/tools/colorTools.js",["109"],"/home/adgk/projects/colourbrain/src/components/RoundColor/RoundColor.jsx",[],"/home/adgk/projects/colourbrain/src/components/Button/Button.jsx",[],"/home/adgk/projects/colourbrain/src/components/ColorPicker/ColorPicker.jsx",["110"],"/home/adgk/projects/colourbrain/src/components/CompareColors/CompareColors.jsx",[],"/home/adgk/projects/colourbrain/src/components/Results/Results.jsx",[],"/home/adgk/projects/colourbrain/src/components/Highscores/Highscores.jsx",[],"/home/adgk/projects/colourbrain/src/components/NewGameButtons/NewGameButtons.jsx",["111","112"],"import React, { useState } from 'react';\nimport Collapsible from 'react-collapsible';\n\nimport './NewGameButtons.scss';\nimport Button from '../Button/Button';\nimport SVGButton from '../SVGButton/SVGButton';\nimport Checkbox from '../Checkbox/Checkbox';\n\nimport { ReactComponent as Wheel } from './../../assets/Group_3.svg';\nimport { ReactComponent as ArrowToggle } from './../../assets/arrowToggle.svg';\nimport { ReactComponent as Ax1 } from './../../assets/ax-1.svg';\nimport { ReactComponent as Ax2 } from './../../assets/ax-2.svg';\nimport { ReactComponent as Ax3 } from './../../assets/ax-3.svg';\n\nexport default function NewGameButtons({\n  handleSelectMode,\n  handleToggleUserPrefPreview,\n  userPreferencePreview,\n}) {\n  return (\n    <div className=\"new-game-buttons\">\n      <ul>\n        <li>\n          <Collapsible\n            triggerClassName=\"collapsible-memory\"\n            triggerOpenedClassName=\"collapsible-memory\"\n            lazyRender={true}\n            trigger={\n              <h2>\n                <Wheel />\n                Memory <ArrowToggle />\n              </h2>\n            }\n            // open={true}\n          >\n            <div className=\"memory\">\n              <h3>\n                <Wheel />\n                Memory\n              </h3>\n              <div className=\"btn-cont\">\n                <SVGButton\n                  dataKey=\"gamemode\"\n                  label=\"Hue\"\n                  Icon={Ax1}\n                  data=\"Hue\"\n                  handleClick={handleSelectMode}\n                />\n                <SVGButton\n                  dataKey=\"gamemode\"\n                  label={'Saturation Luminance'}\n                  Icon={Ax2}\n                  data=\"SatLum\"\n                  handleClick={handleSelectMode}\n                />\n                <SVGButton\n                  dataKey=\"gamemode\"\n                  data=\"HSL\"\n                  label={'Hue Saturation Luminance'}\n                  Icon={Ax3}\n                  handleClick={handleSelectMode}\n                />\n              </div>\n            </div>\n          </Collapsible>\n        </li>\n\n        <li>\n          <Collapsible\n            triggerClassName=\"collapsible-harmonies\"\n            triggerOpenedClassName=\"collapsible-harmonies\"\n            trigger={\n              <h2>\n                <Wheel />\n                Harmony <ArrowToggle />\n              </h2>\n            }\n            lazyRender={true}\n          >\n            <div className=\"complement\">\n              <h3>\n                <Wheel />\n                <span>Complement</span>\n              </h3>\n              <div className=\"btn-cont\">\n                <SVGButton\n                  dataKey=\"gamemode\"\n                  data=\"CompHue\"\n                  label=\"Hue\"\n                  Icon={Ax1}\n                  handleClick={handleSelectMode}\n                />\n                <SVGButton\n                  dataKey=\"gamemode\"\n                  data=\"CompSL\"\n                  label={'Saturation Luminance'}\n                  Icon={Ax2}\n                  handleClick={handleSelectMode}\n                />\n                <SVGButton\n                  dataKey=\"gamemode\"\n                  data=\"CompHSL\"\n                  label={'Hue Saturation Luminance'}\n                  Icon={Ax3}\n                  handleClick={handleSelectMode}\n                />\n              </div>\n            </div>\n\n            <div className=\"split-complement\">\n              <h3>\n                <Wheel />\n                <span>Split-Complement</span>\n              </h3>\n              <div className=\"btn-cont\">\n                <SVGButton\n                  dataKey=\"gamemode\"\n                  data=\"SCompHue\"\n                  label=\"Hue\"\n                  Icon={Ax1}\n                  handleClick={handleSelectMode}\n                />\n                <SVGButton\n                  dataKey=\"gamemode\"\n                  data=\"SCompSL\"\n                  label={'Saturation Luminance'}\n                  Icon={Ax2}\n                  handleClick={handleSelectMode}\n                />\n                <SVGButton\n                  dataKey=\"gamemode\"\n                  data=\"SCompHSL\"\n                  label={'Hue Saturation Luminance'}\n                  Icon={Ax3}\n                  handleClick={handleSelectMode}\n                />\n              </div>\n            </div>\n\n            <div className=\"triad\">\n              <h3>\n                <Wheel />\n                <span>Triad</span>\n              </h3>\n              <div className=\"btn-cont\">\n                <SVGButton\n                  dataKey=\"gamemode\"\n                  data=\"TriadHue\"\n                  label=\"Hue\"\n                  Icon={Ax1}\n                  handleClick={handleSelectMode}\n                />\n                <SVGButton\n                  dataKey=\"gamemode\"\n                  data=\"TriadSL\"\n                  label={'Saturation Luminance'}\n                  Icon={Ax2}\n                  handleClick={handleSelectMode}\n                />\n                <SVGButton\n                  dataKey=\"gamemode\"\n                  data=\"TriadHSL\"\n                  label={'Hue Saturation Luminance'}\n                  Icon={Ax3}\n                  handleClick={handleSelectMode}\n                />\n              </div>\n            </div>\n\n            <div className=\"tetrad\">\n              <h3>\n                <Wheel />\n                <span>Tetrad</span>\n              </h3>\n              <div className=\"btn-cont\">\n                <SVGButton\n                  dataKey=\"gamemode\"\n                  data=\"TetradHue\"\n                  label=\"Hue\"\n                  Icon={Ax1}\n                  handleClick={handleSelectMode}\n                />\n\n                <SVGButton\n                  dataKey=\"gamemode\"\n                  data=\"TetradSL\"\n                  label={'Saturation Luminance'}\n                  Icon={Ax2}\n                  handleClick={handleSelectMode}\n                />\n                <SVGButton\n                  dataKey=\"gamemode\"\n                  data=\"TetradHSL\"\n                  label={'Hue Saturation Luminance'}\n                  Icon={Ax3}\n                  handleClick={handleSelectMode}\n                />\n              </div>\n            </div>\n          </Collapsible>\n        </li>\n        <li>\n          <Collapsible\n            triggerClassName=\"collapsible-shade\"\n            triggerOpenedClassName=\"collapsible-shade\"\n            lazyRender={true}\n            trigger={\n              <h2>\n                <Wheel />\n                Shade <ArrowToggle />\n              </h2>\n            }\n            // open={true}\n          >\n            <div className=\"shade\">\n              <h3>\n                <Wheel />\n                Colour - Greyscale\n              </h3>\n              <div className=\"btn-cont\">\n                <SVGButton\n                  dataKey=\"gamemode\"\n                  label=\"Luminance\"\n                  Icon={Ax1}\n                  data=\"GSLum\"\n                  handleClick={handleSelectMode}\n                />\n                {/* <SVGButton\n                  dataKey=\"gamemode\"\n                  label={'Saturation Luminance'}\n                  Icon={Ax2}\n                  data=\"SatLum\"\n                  handleClick={handleSelectMode}\n                /> */}\n                {/* <SVGButton\n                  dataKey=\"gamemode\"\n                  data=\"HSL\"\n                  label={'Hue Saturation Luminance'}\n                  Icon={Ax3}\n                  handleClick={handleSelectMode}\n                /> */}\n              </div>\n            </div>\n\n            <div className=\"shade\">\n              <h3>\n                <Wheel />\n                Greyscale - Colour\n              </h3>\n              <div className=\"btn-cont\">\n                {/* <SVGButton\n                  dataKey=\"gamemode\"\n                  label=\"Luminance\"\n                  Icon={Ax1}\n                  data=\"GSHue\"\n                  handleClick={handleSelectMode}\n                /> */}\n                {/* <SVGButton\n                  dataKey=\"gamemode\"\n                  label={'Saturation Luminance'}\n                  Icon={Ax2}\n                  data=\"SatLum\"\n                  handleClick={handleSelectMode}\n                /> */}\n                {/* <SVGButton\n                  dataKey=\"gamemode\"\n                  data=\"HSL\"\n                  label={'Hue Saturation Luminance'}\n                  Icon={Ax3}\n                  handleClick={handleSelectMode}\n                /> */}\n              </div>\n            </div>\n          </Collapsible>\n        </li>\n      </ul>\n\n      {/* custom game with checkbox to choose which modes to include */}\n      <div className=\"user-options\">\n        <h4>Stuck? </h4>\n        <Checkbox\n          label={'Colour preview '}\n          handleChange={handleToggleUserPrefPreview}\n          checked={userPreferencePreview}\n        />\n        <div>\n          <small>\n            Lets you preview the colour. (Score don't contribute to highscores.\n            Doesn't apply to memory games).\n          </small>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/adgk/projects/colourbrain/src/tools/deltaE.js",[],"/home/adgk/projects/colourbrain/src/tools/scoring.js",[],"/home/adgk/projects/colourbrain/src/tools/gameModeMaps.js",[],"/home/adgk/projects/colourbrain/src/components/Checkbox/Checkbox.js",[],"/home/adgk/projects/colourbrain/src/components/AnimatedCounter/AnimatedCounter.jsx",[],"/home/adgk/projects/colourbrain/src/components/Home/Home.jsx",[],"/home/adgk/projects/colourbrain/src/components/Hooks/useOutsideClick.jsx",[],"/home/adgk/projects/colourbrain/src/components/SVGButton/SVGButton.jsx",[],"/home/adgk/projects/colourbrain/src/components/GridPicker/GridPicker.js",["113"],"import React from 'react';\nimport './GridPicker.scss';\nimport { RgbColorPicker } from 'react-colorful';\nimport 'react-colorful/dist/index.css';\n\nexport default function GridPicker({ color, onChange, gridColors }) {\n  return (\n    <div className=\"picker\">\n      {/* <RgbColorPicker\n        className=\"picker__control\"\n        color={color}\n        onChange={onChange}\n      /> */}\n      <div className=\"picker__swatches\">\n        {gridColors.map((presetColor) => {\n          const { r, g, b } = presetColor;\n          return (\n            <button\n              key={presetColor.r}\n              className=\"picker__swatch\"\n              style={{ background: `rgb(${r},${g},${b})` }}\n              onClick={() => onChange(presetColor)}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":2,"column":20,"nodeType":"120","messageId":"121","endLine":2,"endColumn":29},{"ruleId":"118","severity":1,"message":"122","line":11,"column":3,"nodeType":"120","messageId":"121","endLine":11,"endColumn":22},{"ruleId":"118","severity":1,"message":"123","line":24,"column":10,"nodeType":"120","messageId":"121","endLine":24,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":114,"column":6,"nodeType":"126","endLine":114,"endColumn":13,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"128","line":122,"column":6,"nodeType":"126","endLine":122,"endColumn":16,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":137,"column":7,"nodeType":"132","messageId":"133","endLine":137,"endColumn":16},{"ruleId":"134","severity":1,"message":"135","line":52,"column":9,"nodeType":"136","messageId":"137","endLine":52,"endColumn":15},{"ruleId":"118","severity":1,"message":"138","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"139","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":14},{"ruleId":"118","severity":1,"message":"140","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":24},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'grayscaleColorRange' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'gameActive', 'gamemode', 'preview', and 'roundColors'. Either include them or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has missing dependencies: 'gameActive' and 'handleRestartGame'. Either include them or remove the dependency array.",["144"],"no-dupe-keys","Duplicate key 'grayscale'.","ObjectExpression","unexpected","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'useState' is defined but never used.","'Button' is defined but never used.","'RgbColorPicker' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [gameActive, gamemode, preview, round, roundColors]",{"range":"149","text":"150"},"Update the dependencies array to be: [gameActive, gamemode, handleRestartGame]",{"range":"151","text":"152"},[3588,3595],"[gameActive, gamemode, preview, round, roundColors]",[3728,3738],"[gameActive, gamemode, handleRestartGame]"]